- hosts: localhost
  vars_files:
    - host_vars/nectar.yaml
  gather_facts: true

  roles:
    # prereq
    - role: os-common
    - role: os-create-security-groups

  post_tasks:
    - include_role:
        name: os-create-batch
      loop: "{{ instances }}"
      loop_control:
        loop_var: instance

    # Credit to: https://github.com/msolberg/openstack-ansible-demo/blob/master/tutorial/README.md
    - name: Await SSH connection for all created/loaded instances.
      command: >
        ssh -i {{ ansible_ssh_private_key_file }}
        -oBatchMode=yes -oStrictHostKeyChecking=no
        ubuntu@{{ item }} true
      register: result
      until: result is success
      retries: 25
      delay: 8
      when: item != "localhost"
      loop: "{{ groups['all'] }}" # os_instance.openstack.public_v4

    - name: Select random node to be "CouchDB's setup master".
      set_fact:
        couchdb_node_leader: "{{ groups['db'] | random }}"
    - name: Select random manager node to init swarm.
      set_fact:
        docker_swarm_leader: "{{ groups['managers'] | random }}"
    
    # Credit to: https://stackoverflow.com/a/41455193 for random UUIDs.
    #couchdb_secret: "{{ 99999999 | random | to_uuid }}"
    #couchdb_cookie: "{{ 99999999 | random | to_uuid }}"

- hosts: all:!localhost
  remote_user: ubuntu
  become: yes
  gather_facts: yes
  vars:
    jsonKeys: "{{ lookup('file', 'api_keys.json') | from_json }}"
  roles:
    - role: vm-set-proxy
      when: ansible_env.http_proxy is not defined
    #- role: vm-mount-volumes
    #  vars:
    #    mounts:
    #      - device: "/dev/vdb"
    #        path: "{{ couchDB_mount_point }}"
    #  when: inventory_hostname in groups['db']

    - role: vm-install-python
    - role: vm-install-docker
    #- role: vm-init-couchdb
    #- role: main-start-twitter-script
    
    # If we can't create any volumes in openstack Cinder
    post_tasks:
      - name: Create directory "{{ couchDB_mount_point }}"
        file:
          path: "{{ couchDB_mount_point }}"
          state: directory
        when: inventory_hostname in groups['db']

  tags:
    - setup_packages


#########################   DOCKER SWARM INIT:   ###########################

- hosts: all:!localhost
  remote_user: ubuntu
  become: yes
  gather_facts: yes
  vars:
    swarm_leader: "{{ hostvars['localhost']['docker_swarm_leader'] }}"
  pre_tasks:
    - name: DEBUG Stop & remove all docker containers
      shell: "docker rm --force $(docker ps -aq)"
      ignore_errors: yes

    - name: DEBUG Stop all docker services
      shell: "docker service rm $(docker service ls -q)"
      ignore_errors: yes
  roles:
    - role: docker-start-swarm
  tags:
    - swarm

- hosts: db
  remote_user: ubuntu
  become: yes
  gather_facts: yes
  vars:
    # Credit to: https://stackoverflow.com/a/36312618 for the code
    host_count: "{{ groups['db'] | length }}"
  roles:
    - role: db-setup-couchdb 
  tags:
    - couchdb
  
- hosts: "{{ hostvars['localhost']['docker_swarm_leader'] }}"
  remote_user: ubuntu
  become: yes
  gather_facts: yes
  vars:
    ha_port_proxy: 5700
    ha_replicas: 2
    dock_vis_port: 8080
  roles:
    - role: docker-couchdb-haproxy
    - role: docker-start-visualizer
    - role: db-create-databases
    - role: docker-deploy-stack
  tags:
    - swarm
    - couchdb