# Big credit to https://github.com/AURIN/comp90024/tree/master/couchdb/macos
# for the idea.
# Credit to https://github.com/redgeoff/couchdb-docker-service for how-to
# cookie details. Important for allowing nodes to reconnect to cluser
# after shutdown/restart.

- name: Wait for all CouchDB interfaces to load up...
  wait_for:
    host: "{{ inventory_hostname }}"
    port: 5984
    delay: 2
    timeout: 100

- name: Start cluster setup.
  command: >
    curl -X POST
    "http://user:pass@127.0.0.1:5984/_cluster_setup"
    -H 'Content-Type: application/json'
    -d '{"action": "enable_cluster", "bind_address": "0.0.0.0",
    "username": "user", "password": "pass",
    "node_count": "{{ host_count }}"}'

- name: Permit master node to create cluster.
  block:
    - name: Initalise other nodes to cluster
      # Shell and multiple commands: https://stackoverflow.com/a/43543441
      # Also multiline YAML approaches help: https://yaml-multiline.info/
      shell: >
        curl --noproxy '*' -X POST -H 'Content-Type: application/json'
        "http://user:pass@127.0.0.1:5984/_cluster_setup"
        -d '{"action": "enable_cluster", "bind_address": "0.0.0.0",
        "username": "user", "password": "pass", "port": 5984,
        "node_count": "{{ host_count }}",
        "remote_node": "{{ item }}",
        "remote_current_user": "user",
        "remote_current_password": "pass"}'
        

        curl --noproxy '*' -X POST -H 'Content-Type: application/json'
        "http://user:pass@127.0.0.1:5984/_cluster_setup"
        -d '{"action": "add_node", "host": "{{ item }}",
        "port": 5984, "username": "user", "password": "pass"}'
      loop: "{{ groups['db'] }}"
      when: item != inventory_hostname

    - name: Finalise cluster setup
      command: >
        curl --noproxy '*' -X POST
        "http://user:pass@localhost:5984/_cluster_setup"
        -H 'Content-Type: application/json'
        -d '{"action": "finish_cluster"}'

    # - command: curl --noproxy '*' http://user:pass@localhost:5984/_cluster_setup

    # - name: DEBUG Print memberships
    #   command: curl --noproxy '*' http://user:pass@{{ item }}:5984/_membership
    #   loop: "{{ groups['db'] }}"

  when: inventory_hostname == hostvars['localhost']['couchdb_node_leader']

#- name: Ensure all CouchDB nodes have the same hashed password.
#  replace:
#    path: ./docker.ini
#    regexp: "^user = (.*)$"
#    replace: "user = -pbkdf2-b6e8e563a89bfc37c47cd191927327a19039a6d0,ea0521454095d281197e871c06d514d4,10"