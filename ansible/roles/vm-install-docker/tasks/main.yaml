# Credit to: https://gist.github.com/rbq/886587980894e98b23d0eee2a1d84933
# Following instructions from: https://docs.docker.com/install/linux/docker-ce/ubuntu/

- name: Install prereqs for Docker
  become: yes
  apt:
    name: ['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 
           'software-properties-common']
    state: latest
  when: ansible_distribution == "Ubuntu"

- name: Add Docker's GPG key
  become: yes
  apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"

- name: Add Docker to APT repository
  apt_repository:
    repo: >
            deb [arch=amd64] https://download.docker.com/linux/ubuntu
            {{ansible_distribution_release}} stable

- name: Install Docker CE
  become: yes
  apt:
    name: ['docker-ce', 'docker-ce-cli', 'containerd.io']
    state: latest

- name: Check if Docker Compose has been installed.
  stat:
    path: /usr/local/bin/docker-compose
  register: dcompose_file

- block:
  - name: Download Docker Compose
    shell: >
      curl -L
      https://github.com/docker/compose/releases/download/1.24.0/docker-compose-`uname -s`-`uname -m`
      -o /usr/local/bin/docker-compose

  - name: Make Docker Compose executable
    shell: chmod +x /usr/local/bin/docker-compose
    when: dcompose_file.stat.exists == False

# Credit to: https://stackoverflow.com/a/28093517 for the idea;
# the HTTP proxy is not applied immediately to Docker unfortunately.
- name: Add HTTP proxy to Docker
  block:
    - stat:
        path: "{{ dock_path }}/http-proxy.conf"
      register: stat_ret
    - stat:
        path: "~/.docker/config.json"
      register: config_ret

    - block:
        - file:
            path: "{{ dock_path }}"
            state: directory
        - name: Copy HTTP proxy file for Docker.
          copy:
            src: "http-proxy.conf"
            dest: "{{ dock_path }}/http-proxy.conf"

        - name: Create directory for Docker settings.
          file:
            path: ".docker"
            state: directory 
        
        - name: Copy proxy file for Docker containers.
          copy:
            src: config.json
            dest: ".docker/config.json"

        - command: systemctl daemon-reload
        - name: Restart Docker service.
          service:
            name: docker
            state: restarted
      # when: stat_ret.stat.exists == False or config_ret.stat.exists == False
  vars:
    dock_path: "/etc/systemd/system/docker.service.d"
  become: yes
  